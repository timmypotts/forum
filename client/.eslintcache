[{"/home/tim/Projects/forum/client/src/index.js":"1","/home/tim/Projects/forum/client/src/App.js":"2","/home/tim/Projects/forum/client/src/serviceWorker.js":"3","/home/tim/Projects/forum/client/src/components/NavBar.js":"4","/home/tim/Projects/forum/client/src/context/UserContext.js":"5","/home/tim/Projects/forum/client/src/components/pages/Signup/index.js":"6","/home/tim/Projects/forum/client/src/components/pages/Login/index.js":"7","/home/tim/Projects/forum/client/src/components/pages/Home/index.js":"8","/home/tim/Projects/forum/client/src/components/pages/PostPage/index.js":"9","/home/tim/Projects/forum/client/src/components/pages/UserDashboard/index.js":"10","/home/tim/Projects/forum/client/src/services/auth-service.js":"11","/home/tim/Projects/forum/client/src/components/PostCard.js":"12","/home/tim/Projects/forum/client/src/services/post-service.js":"13","/home/tim/Projects/forum/client/src/components/pages/PostPage/CommentForm.js":"14","/home/tim/Projects/forum/client/src/components/CommentCard.js":"15","/home/tim/Projects/forum/client/src/services/comment-service.js":"16","/home/tim/Projects/forum/client/src/components/DashPostCard.js":"17","/home/tim/Projects/forum/client/src/components/DashCommentCard.js":"18","/home/tim/Projects/forum/client/src/components/pages/Login/LoginForm/index.js":"19","/home/tim/Projects/forum/client/src/components/pages/Signup/SignupForm/index.js":"20","/home/tim/Projects/forum/client/src/components/pages/Home/PostForm/index.js":"21","/home/tim/Projects/forum/client/src/services/auth-header.js":"22","/home/tim/Projects/forum/client/src/services/like-service.js":"23","/home/tim/Projects/forum/client/src/styles/index.js":"24","/home/tim/Projects/forum/client/src/context/CheckUser.js":"25","/home/tim/Projects/forum/client/src/components/pages/Signup/SignupForm/useFormValidation.js":"26","/home/tim/Projects/forum/client/src/components/pages/Signup/SignupForm/validateAuth.js":"27"},{"size":557,"mtime":1606676066332,"results":"28","hashOfConfig":"29"},{"size":1183,"mtime":1606676066332,"results":"30","hashOfConfig":"29"},{"size":5086,"mtime":1603220478279,"results":"31","hashOfConfig":"29"},{"size":2213,"mtime":1605908155435,"results":"32","hashOfConfig":"29"},{"size":88,"mtime":1603220478279,"results":"33","hashOfConfig":"29"},{"size":227,"mtime":1603220478279,"results":"34","hashOfConfig":"29"},{"size":222,"mtime":1603220478279,"results":"35","hashOfConfig":"29"},{"size":2365,"mtime":1607193022049,"results":"36","hashOfConfig":"29"},{"size":2514,"mtime":1607119929190,"results":"37","hashOfConfig":"29"},{"size":3171,"mtime":1607140759694,"results":"38","hashOfConfig":"29"},{"size":931,"mtime":1606934816917,"results":"39","hashOfConfig":"29"},{"size":3422,"mtime":1607143421346,"results":"40","hashOfConfig":"29"},{"size":1618,"mtime":1607463942031,"results":"41","hashOfConfig":"29"},{"size":1163,"mtime":1607462578152,"results":"42","hashOfConfig":"29"},{"size":2035,"mtime":1607459514000,"results":"43","hashOfConfig":"29"},{"size":1147,"mtime":1607463916810,"results":"44","hashOfConfig":"29"},{"size":3735,"mtime":1607459136611,"results":"45","hashOfConfig":"29"},{"size":2618,"mtime":1607459469603,"results":"46","hashOfConfig":"29"},{"size":2286,"mtime":1603242665119,"results":"47","hashOfConfig":"29"},{"size":3490,"mtime":1603220478279,"results":"48","hashOfConfig":"29"},{"size":2339,"mtime":1606609808073,"results":"49","hashOfConfig":"29"},{"size":406,"mtime":1606595528560,"results":"50","hashOfConfig":"29"},{"size":1152,"mtime":1607463926110,"results":"51","hashOfConfig":"29"},{"size":341,"mtime":1607041910304,"results":"52","hashOfConfig":"29"},{"size":487,"mtime":1607142987633,"results":"53","hashOfConfig":"29"},{"size":1956,"mtime":1603220478279,"results":"54","hashOfConfig":"29"},{"size":680,"mtime":1603220478279,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"w8cs2s",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"58"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"58"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"58"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"58"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"/home/tim/Projects/forum/client/src/index.js",[],["119","120"],"/home/tim/Projects/forum/client/src/App.js",[],"/home/tim/Projects/forum/client/src/serviceWorker.js",[],"/home/tim/Projects/forum/client/src/components/NavBar.js",[],"/home/tim/Projects/forum/client/src/context/UserContext.js",[],"/home/tim/Projects/forum/client/src/components/pages/Signup/index.js",[],"/home/tim/Projects/forum/client/src/components/pages/Login/index.js",[],"/home/tim/Projects/forum/client/src/components/pages/Home/index.js",["121"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { Container, Row, Col, Button } from \"reactstrap\";\nimport PostCard from \"../../PostCard\";\nimport PostForm from \"./PostForm\";\nimport moment from \"moment\";\nimport { UserContext } from \"../../../context/UserContext\";\nimport AuthService from \"../../../services/auth-service\";\nimport PostService from \"../../../services/post-service\";\n\nexport default function Home() {\n  const { user, setUser } = useContext(UserContext);\n  const [posts, setPosts] = useState([]);\n  const [showBool, setShowBool] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  useEffect(() => {\n    const user = AuthService.getCurrentUser();\n    if (user) {\n      setUser(user.username);\n    } else {\n      console.log(\"no user\");\n    }\n  }, []);\n\n  useEffect(() => {\n    PostService.loadPosts().then((res) => {\n      if (!res) {\n        return null;\n      }\n      setPosts(res);\n    });\n  }, []);\n\n  function checkUser(e) {\n    if (user) {\n      setShowBool(true);\n    } else {\n      setError(\"Please Sign In or Create an Account to make a post\");\n    }\n  }\n\n  return (\n    <Container>\n      <Row mb={3}>\n        <Col>\n          {showBool ? (\n            <div>\n              <PostForm mb={5} />\n              <Button\n                color=\"link\"\n                className=\"float-right\"\n                onClick={(e) => setShowBool(false)}\n              >\n                Cancel\n              </Button>\n            </div>\n          ) : (\n            <Button\n              color=\"info\"\n              className=\"float-left\"\n              onClick={(e) => checkUser(e)}\n            >\n              Create a Post\n            </Button>\n          )}\n        </Col>\n      </Row>\n      <Row>\n        <Col>{error ? <p className=\"error-text\">{error}</p> : null}</Col>\n      </Row>\n\n      {posts.length ? (\n        <div>\n          {posts.map((post) => (\n            <PostCard\n              key={post.id}\n              postID={post.id}\n              title={post.postTitle}\n              body={post.postBody}\n              date={moment(post.createdAt).calendar()}\n              author={post.User.username}\n              rating={post.rating}\n              image={post.image}\n              comments={post.commentCount}\n            />\n          ))}\n        </div>\n      ) : (\n        <h1>Loading</h1>\n      )}\n    </Container>\n  );\n}\n","/home/tim/Projects/forum/client/src/components/pages/PostPage/index.js",["122","123","124"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { Container, Row, Col } from \"reactstrap\";\nimport AuthService from \"../../../services/auth-service\";\nimport PostService from \"../../../services/post-service\";\nimport CommentService from \"../../../services/comment-service\";\nimport { UserContext } from \"../../../context/UserContext\";\nimport CommentForm from \"./CommentForm\";\nimport CommentCard from \"../../CommentCard\";\nimport PostCard from \"../../PostCard\";\nimport moment from \"moment\";\n\nexport default function PostPage({ match, location }) {\n  const [post, setPost] = useState([]);\n  const [comments, setComments] = useState([]);\n  const { user, setUser } = useContext(UserContext);\n  const {\n    params: { postID },\n  } = match;\n\n  useEffect(() => {\n    const user = AuthService.getCurrentUser();\n    if (user) {\n      setUser(user.username);\n    } else {\n      console.log(\"no user\");\n    }\n  }, []);\n\n  useEffect(() => {\n    getPost({ postID });\n    loadComments({ postID });\n  }, []);\n\n  async function getPost(id) {\n    let response = await PostService.getPost(id);\n    if (!response) {\n      console.log(\"Error loading post!\");\n    }\n    setPost(response.data);\n  }\n\n  async function loadComments(id) {\n    let response = await CommentService.getComments(id);\n    if (!response) {\n      console.log(\"Error loading post!\");\n      return null;\n    }\n    setComments(response);\n  }\n\n  return (\n    <Container>\n      <Row>\n        <Col>\n          {post.User ? (\n            <PostCard\n              postID={post.id}\n              key={post.id}\n              title={post.postTitle}\n              body={post.postBody}\n              date={moment(post.createdAt).calendar()}\n              author={post.User.username}\n              rating={post.rating}\n              image={post.image}\n              comments={post.commentCount}\n            />\n          ) : null}\n        </Col>\n      </Row>\n      <Row className=\"mb-4\">\n        <Col>\n          <CommentForm postID={{ postID }} />\n        </Col>\n      </Row>\n\n      <Row>\n        <Col>\n          {comments.length ? (\n            <div>\n              {comments.map((comment) => (\n                <CommentCard\n                  key={comment.id}\n                  commentID={comment.id}\n                  commentText={comment.comment}\n                  author={comment.username}\n                  rating={comment.rating}\n                />\n              ))}\n            </div>\n          ) : null}\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n","/home/tim/Projects/forum/client/src/components/pages/UserDashboard/index.js",["125","126"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { Container, Row, Button, ButtonGroup } from \"reactstrap\";\nimport DashPostCard from \"../../DashPostCard\";\nimport DashCommentCard from \"../../DashCommentCard\";\nimport moment from \"moment\";\nimport { UserContext } from \"../../../context/UserContext\";\nimport AuthService from \"../../../services/auth-service\";\nimport PostService from \"../../../services/post-service\";\nimport CommentService from \"../../../services/comment-service\";\n\nexport default function UserDashboard({ match, location }) {\n  const { user, setUser } = useContext(UserContext);\n  const {\n    params: { username },\n  } = match;\n  const [posts, setPosts] = useState([]);\n  const [comments, setComments] = useState([]);\n  const [grab, setGrab] = useState(\"Post\");\n\n  useEffect(() => {\n    const user = AuthService.getCurrentUser();\n    if (user) {\n      setUser(user.username);\n    } else {\n      console.log(\"no user\");\n    }\n  }, []);\n\n  useEffect(() => {\n    if (grab === \"Comment\") {\n      CommentService.getCommentsFromCurrentUser().then((res) => {\n        if (!res) {\n          return null;\n        }\n        setComments(res.data);\n        console.log(res);\n      });\n    } else {\n      PostService.getPostsFromCurrentUser().then((res) => {\n        if (!res) {\n          return null;\n        }\n        setPosts(res.data);\n        console.log(res);\n      });\n    }\n  }, [grab]);\n\n  // This function is called when the user has selected posts to be loaded\n  function renderPosts() {\n    return posts.length ? (\n      <div>\n        {posts.map((post) => (\n          <DashPostCard\n            key={post.id}\n            postID={post.id}\n            title={post.postTitle}\n            body={post.postBody}\n            date={moment(post.createdAt).calendar()}\n            rating={post.rating}\n            image={post.image}\n            comments={post.commentCount}\n          />\n        ))}\n      </div>\n    ) : (\n      <h1>Loading</h1>\n    );\n  }\n\n  // This function is called when the user has selected comments to be loaded\n  function renderComments() {\n    return comments.length ? (\n      <div>\n        {comments.map((comment) => (\n          <DashCommentCard\n            key={comment.id}\n            commentID={comment.id}\n            commentText={comment.comment}\n            author={comment.username}\n            rating={comment.rating}\n          />\n        ))}\n      </div>\n    ) : null;\n  }\n\n  return (\n    <Container>\n      <Row>\n        <h1 className=\"float-left\">Hello {user}</h1>\n      </Row>\n      <Row>\n        <ButtonGroup className=\"float-right pb-2\">\n          <Button\n            disabled={grab === \"Post\"}\n            onClick={() => setGrab(\"Post\")}\n            className=\"float-right\"\n          >\n            Posts\n          </Button>\n          <Button\n            disabled={grab === \"Comment\"}\n            onClick={() => setGrab(\"Comment\")}\n            className=\"float-right\"\n          >\n            Comments\n          </Button>\n        </ButtonGroup>\n      </Row>\n\n      <Row>\n        <h4>{grab} History:</h4>\n      </Row>\n      <div>{grab === \"Post\" ? renderPosts() : renderComments()}</div>\n    </Container>\n  );\n}\n","/home/tim/Projects/forum/client/src/services/auth-service.js",[],"/home/tim/Projects/forum/client/src/components/PostCard.js",[],"/home/tim/Projects/forum/client/src/services/post-service.js",[],"/home/tim/Projects/forum/client/src/components/pages/PostPage/CommentForm.js",["127"],"import React, { useState } from \"react\";\nimport { Button, Form, FormGroup, Label, Input } from \"reactstrap\";\nimport CommentService from \"../../../services/comment-service\";\n\nconst CommentForm = (props) => {\n  const [error, setError] = \"\";\n  const [comment, setComment] = useState(``);\n  const postID = props.postID.postID;\n\n  function handleSubmit(event) {\n    if (comment === ``) {\n      setError(\"Please create a title for this post\");\n      return;\n    }\n    console.log(\"submitting\");\n    CommentService.submitComment(postID, comment).catch((err) => {\n      console.log(postID);\n      console.log(err);\n    });\n  }\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <FormGroup>\n        <Label for=\"Comment\">Comment</Label>\n        <Input\n          onChange={(e) => setComment(e.target.value)}\n          type=\"textarea\"\n          value={comment}\n          name=\"comment\"\n          rows=\"5\"\n          id=\"comment\"\n          placeholder=\"Leave a Comment\"\n        />\n      </FormGroup>\n      <FormGroup>\n        <Button className=\"float-left\" type=\"submit\">\n          Submit\n        </Button>\n      </FormGroup>\n    </Form>\n  );\n};\n\nexport default CommentForm;\n","/home/tim/Projects/forum/client/src/components/CommentCard.js",["128"],"import React, { useState } from \"react\";\nimport LikeService from \"../services/like-service\";\nimport notLiked from \"./img/not-liked.png\";\nimport likedicon from \"./img/liked.png\";\n\nimport { Card, CardHeader, CardBody } from \"reactstrap\";\n\nconst CommentCard = (props) => {\n  const [liked, setLiked] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [rating, setRating] = useState(props.rating);\n\n  async function likeComment() {\n    if (JSON.parse(localStorage.getItem(\"user\")) == null) {\n      setError(\"Please sign in to like a post\");\n      return;\n    }\n    setLiked(true);\n    let newRating = await LikeService.likeComment(props.commentID);\n    console.log(newRating);\n    setRating(newRating);\n  }\n\n  async function unlikeComment() {\n    setLiked(false);\n    let newRating = await LikeService.unlikeComment(props.commentID);\n    console.log(newRating);\n    setRating(newRating);\n  }\n  return (\n    <div>\n      <Card className=\"mb-2\">\n        <CardHeader className=\"text-left mb-0\">\n          <h6 className=\"float-left ml-0 mb-0 pt-1\">{props.author}:</h6>\n          {liked ? (\n            <button className=\"float-right mr-2 likeButton\">\n              <img\n                className=\"likeButtonIcon-comment\"\n                src={likedicon}\n                alt=\"click to unlike post\"\n                onClick={unlikeComment}\n              />\n            </button>\n          ) : (\n            <button className=\"float-right mr-2 likeButton\">\n              <img\n                className=\"likeButtonIcon-comment\"\n                src={notLiked}\n                alt=\"click to like post\"\n                onClick={likeComment}\n              />\n            </button>\n          )}\n          <button className=\"float-right mr-2\">Reply</button>\n          <h5 className=\"float-right mr-3 ml-1 mb-0\">{rating}</h5>\n        </CardHeader>\n        <CardBody className=\"text-left mb-0\">\n          <p className=\"mb-0 post-body\">{props.commentText}</p>\n        </CardBody>\n      </Card>\n    </div>\n  );\n};\n\nexport default CommentCard;\n","/home/tim/Projects/forum/client/src/services/comment-service.js",[],"/home/tim/Projects/forum/client/src/components/DashPostCard.js",[],"/home/tim/Projects/forum/client/src/components/DashCommentCard.js",["129"],"import React, { useState } from \"react\";\nimport LikeService from \"../services/like-service\";\nimport notLiked from \"./img/not-liked.png\";\nimport likedicon from \"./img/liked.png\";\nimport deleteButton from \"./img/redX.png\";\nimport { Card, CardHeader, CardBody } from \"reactstrap\";\nimport commentService from \"../services/comment-service\";\n\nconst DashCommentCard = (props) => {\n  const [liked, setLiked] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [rating, setRating] = useState(props.rating);\n\n  async function likeComment() {\n    if (JSON.parse(localStorage.getItem(\"user\")) == null) {\n      setError(\"Please sign in to like a post\");\n      return;\n    }\n    setLiked(true);\n    let newRating = await LikeService.likeComment(props.commentID);\n    console.log(newRating);\n    setRating(newRating);\n  }\n\n  //Executes when the delete button is clicked\n  function deleteComment(event) {\n    event.preventDefault();\n    console.log(\"DELETING Comment\");\n    commentService.deleteComment(props.commentID);\n  }\n\n  async function unlikeComment() {\n    setLiked(false);\n    let newRating = await LikeService.unlikeComment(props.commentID);\n    console.log(newRating);\n    setRating(newRating);\n  }\n  return (\n    <div>\n      <Card className=\"mb-2\">\n        <CardHeader className=\"text-left mb-0\">\n          <button color=\"danger\" className=\"float-right\">\n            <img\n              onClick={deleteComment}\n              alt=\"delete post\"\n              src={deleteButton}\n              className=\"float-right delete-button-comment\"\n            />\n          </button>\n          <h6 className=\"float-left ml-0 mb-0 pt-1\">{props.author}:</h6>\n          {liked ? (\n            <button className=\"float-right mr-2 likeButton\">\n              <img\n                className=\"likeButtonIcon-comment\"\n                src={likedicon}\n                alt=\"click to unlike post\"\n                onClick={unlikeComment}\n              />\n            </button>\n          ) : (\n            <button className=\"float-right mr-2 likeButton\">\n              <img\n                className=\"likeButtonIcon-comment\"\n                src={notLiked}\n                alt=\"click to like post\"\n                onClick={likeComment}\n              />\n            </button>\n          )}\n          <button className=\"float-right mr-2\">Reply</button>\n          <h5 className=\"float-right mr-3 ml-1 mb-0\">{rating}</h5>\n        </CardHeader>\n        <CardBody className=\"text-left mb-0\">\n          <p className=\"mb-0 post-body\">{props.commentText}</p>\n        </CardBody>\n      </Card>\n    </div>\n  );\n};\n\nexport default DashCommentCard;\n","/home/tim/Projects/forum/client/src/components/pages/Login/LoginForm/index.js",["130"],"import React, { useContext, useState } from \"react\";\nimport {\n  Col,\n  Card,\n  CardHeader,\n  CardBody,\n  Button,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n} from \"reactstrap\";\nimport AuthService from \"../../../../services/auth-service\";\nimport CheckUser from \"../../../../context/CheckUser\";\nimport { UserContext } from \"../../../../context/UserContext\";\n\nconst LoginForm = (props) => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(null);\n  const { user, setUser } = useContext(UserContext);\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    AuthService.login(username, password)\n      .then((response) => {\n        console.log(response.data);\n        console.log(\"Logged in\", { username, password });\n        setUser(username);\n      })\n      .catch((err) => {\n        console.log(\"Error\");\n        setError(\"Incorrect username or password\");\n      });\n  }\n\n  return (\n    <Card>\n      <CheckUser />\n      <CardHeader>Log In</CardHeader>\n      <CardBody>\n        <Form onSubmit={handleSubmit}>\n          <FormGroup row>\n            <Label for=\"Username\" sm={2}>\n              Username\n            </Label>\n            <Col sm={10}>\n              <Input\n                onChange={(e) => setUsername(e.target.value)}\n                value={username}\n                type=\"username\"\n                name=\"username\"\n                id=\"Username\"\n                placeholder=\"Username\"\n              />\n            </Col>\n          </FormGroup>\n          <FormGroup row>\n            <Label for=\"Password\" sm={2}>\n              Password\n            </Label>\n            <Col sm={10}>\n              <Input\n                onChange={(e) => setPassword(e.target.value)}\n                value={password}\n                type=\"password\"\n                name=\"password\"\n                id=\"Password\"\n                placeholder=\"Password\"\n              />\n            </Col>\n          </FormGroup>\n          <FormGroup check row>\n            <Button color=\"info\" type=\"submit\">\n              Log In\n            </Button>\n            {error ? <div className=\"error-text\">{error}</div> : null}\n          </FormGroup>\n        </Form>\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default LoginForm;\n","/home/tim/Projects/forum/client/src/components/pages/Signup/SignupForm/index.js",[],"/home/tim/Projects/forum/client/src/components/pages/Home/PostForm/index.js",[],"/home/tim/Projects/forum/client/src/services/auth-header.js",[],"/home/tim/Projects/forum/client/src/services/like-service.js",[],"/home/tim/Projects/forum/client/src/styles/index.js",[],"/home/tim/Projects/forum/client/src/context/CheckUser.js",[],"/home/tim/Projects/forum/client/src/components/pages/Signup/SignupForm/useFormValidation.js",["131","132"],"import React, { useContext } from \"react\";\nimport AuthService from \"../../../../services/auth-service\";\nimport { UserContext } from \"../../../../context/UserContext\";\n\nfunction useFormValidation(initialState, validate) {\n  const [values, setValues] = React.useState(initialState);\n  const [errors, setErrors] = React.useState({});\n  const [submissionError, setSubmissionError] = React.useState(null);\n  const [isSubmitting, setSubmitting] = React.useState(false);\n  const { user, setUser } = useContext(UserContext);\n\n  React.useEffect(() => {\n    if (isSubmitting) {\n      const noErrors = Object.keys(errors).length === 0;\n      if (noErrors) {\n        AuthService.register(values.username, values.email, values.password)\n          .then((response) => {\n            console.log(response);\n            console.log(\n              \"authenticated!\",\n              values.username,\n              values.email,\n              values.password\n            );\n            setUser(values.username);\n            setSubmitting(false);\n          })\n          .catch((err) => {\n            console.log(err);\n            setSubmissionError(\n              \"A user with that username or email already exists.\"\n            );\n            setSubmitting(false);\n          });\n\n        setSubmitting(false);\n      } else {\n        setSubmitting(false);\n      }\n    }\n  }, [errors]);\n\n  function handleChange(event) {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value,\n    });\n  }\n\n  // function handleBlur() {\n  //   const validationErrors = validate(values);\n  //   setErrors(validationErrors);\n  // }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    const validationErrors = validate(values);\n    setErrors(validationErrors);\n\n    setSubmitting(true);\n  }\n\n  return {\n    handleSubmit,\n    handleChange,\n    // handleBlur,\n    values,\n    errors,\n    isSubmitting,\n    submissionError,\n  };\n}\n\nexport default useFormValidation;\n","/home/tim/Projects/forum/client/src/components/pages/Signup/SignupForm/validateAuth.js",[],{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","severity":1,"message":"138","line":23,"column":6,"nodeType":"139","endLine":23,"endColumn":8,"suggestions":"140"},{"ruleId":"141","severity":1,"message":"142","line":15,"column":11,"nodeType":"143","messageId":"144","endLine":15,"endColumn":15},{"ruleId":"137","severity":1,"message":"138","line":27,"column":6,"nodeType":"139","endLine":27,"endColumn":8,"suggestions":"145"},{"ruleId":"137","severity":1,"message":"146","line":32,"column":6,"nodeType":"139","endLine":32,"endColumn":8,"suggestions":"147"},{"ruleId":"141","severity":1,"message":"148","line":14,"column":15,"nodeType":"143","messageId":"144","endLine":14,"endColumn":23},{"ruleId":"137","severity":1,"message":"138","line":27,"column":6,"nodeType":"139","endLine":27,"endColumn":8,"suggestions":"149"},{"ruleId":"141","severity":1,"message":"150","line":6,"column":10,"nodeType":"143","messageId":"144","endLine":6,"endColumn":15},{"ruleId":"141","severity":1,"message":"150","line":10,"column":10,"nodeType":"143","messageId":"144","endLine":10,"endColumn":15},{"ruleId":"141","severity":1,"message":"150","line":11,"column":10,"nodeType":"143","messageId":"144","endLine":11,"endColumn":15},{"ruleId":"141","severity":1,"message":"142","line":21,"column":11,"nodeType":"143","messageId":"144","endLine":21,"endColumn":15},{"ruleId":"141","severity":1,"message":"142","line":10,"column":11,"nodeType":"143","messageId":"144","endLine":10,"endColumn":15},{"ruleId":"137","severity":1,"message":"151","line":41,"column":6,"nodeType":"139","endLine":41,"endColumn":14,"suggestions":"152"},"no-native-reassign",["153"],"no-negated-in-lhs",["154"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setUser'. Either include it or remove the dependency array.","ArrayExpression",["155"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar",["156"],"React Hook useEffect has a missing dependency: 'postID'. Either include it or remove the dependency array.",["157"],"'username' is assigned a value but never used.",["158"],"'error' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'isSubmitting', 'setUser', 'values.email', 'values.password', and 'values.username'. Either include them or remove the dependency array.",["159"],"no-global-assign","no-unsafe-negation",{"desc":"160","fix":"161"},{"desc":"160","fix":"162"},{"desc":"163","fix":"164"},{"desc":"160","fix":"165"},{"desc":"166","fix":"167"},"Update the dependencies array to be: [setUser]",{"range":"168","text":"169"},{"range":"170","text":"169"},"Update the dependencies array to be: [postID]",{"range":"171","text":"172"},{"range":"173","text":"169"},"Update the dependencies array to be: [errors, isSubmitting, setUser, values.email, values.password, values.username]",{"range":"174","text":"175"},[791,793],"[setUser]",[921,923],[1007,1009],"[postID]",[965,967],[1352,1360],"[errors, isSubmitting, setUser, values.email, values.password, values.username]"]